{
  "version": 3,
  "sources": ["empty-module:./utils/auth.server", "../../../app/routes/login.tsx", "../../../app/components/layout.tsx", "../../../app/components/textfield.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\login.tsx\");\n  import.meta.hot.lastModified = \"1695151354053.2034\";\n}\n// REMIX HMR END\n\nimport React, { useState } from \"react\";\nimport { useActionData, Link } from \"@remix-run/react\";\nimport { authenticator } from \"./utils/auth.server\";\nimport { Layout } from '~/components/layout';\nimport { Textfield } from '~/components/textfield';\nexport const meta = () => {\n  return [{\n    title: \"New Remix App login\"\n  }];\n};\nexport const loader = async ({\n  request\n}) => {\n  const user = await authenticator.isAuthenticated(request, {\n    successRedirect: \"/\"\n  });\n  return user;\n};\nexport const action = async ({\n  request\n}) => {\n  return authenticator.authenticate(\"form\", request, {\n    successRedirect: \"/\",\n    failureRedirect: \"/login\"\n  });\n};\nexport default function Login() {\n  _s();\n  const actionData = useActionData();\n  const [formData, setFormData] = useState({\n    email: actionData?.fields?.email || '',\n    password: actionData?.fields?.password || ''\n  });\n\n  // Updates the form data when an input changes\n  const handleInputChange = (event, field) => {\n    setFormData(form => ({\n      ...form,\n      [field]: event.target.value\n    }));\n  };\n  return <Layout>\r\n      <div className=\"h-full justify-center bg-yellow-100 items-center flex flex-col gap-y-5\">\r\n        <form method=\"POST\" className=\"rounded-2xl bg-white p-6 w-96\">\r\n          <h2 className=\"text-3xl font-extrabold text-black-600 mb-5\">Login</h2>\r\n          <Textfield htmlFor=\"email\" label=\"Email\" value={formData.email} onChange={e => handleInputChange(e, 'email')} />\r\n          <Textfield htmlFor=\"password\" type=\"password\" label=\"Password\" value={formData.password} onChange={e => handleInputChange(e, 'password')} />\r\n          <div className=\"w-full text-center mt-5\">\r\n            <button type=\"submit\" name=\"_action\" value=\"Sign In\" className=\"w-full rounded-xl mt-2 bg-red-500 px-3 py-2 text-white font-semibold transition duration-300 ease-in-out hover:bg-red-600\">\r\n            Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p className=\"text-gray-600\">Dont have an account?<Link to=\"/signup\"><span className=\"text-red-600 px-2 underline\">Signup</span></Link></p>\r\n      </div>\r\n    </Layout>;\n}\n_s(Login, \"nQ4zq0f7xokB9iHPlw91ZycoWhk=\", false, function () {\n  return [useActionData];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\layout.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\layout.tsx\");\n  import.meta.hot.lastModified = \"1695146170037.5142\";\n}\n// REMIX HMR END\n\nexport function Layout({\n  children\n}) {\n  return <div className=\"h-screen w-full bg-yellow-100\">{children}</div>;\n}\n_c = Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\textfield.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\textfield.tsx\");\n  import.meta.hot.lastModified = \"1695146293620.2349\";\n}\n// REMIX HMR END\n\nexport function Textfield({\n  htmlFor,\n  label,\n  type = 'text',\n  value,\n  onChange = () => {}\n}) {\n  return <>\r\n        <label htmlFor={htmlFor} className=\"text-gray-600 font-semibold\">\r\n          {label}\r\n        </label>\r\n        <input onChange={onChange} type={type} id={htmlFor} name={htmlFor} className=\"w-full p-2 rounded-xl my-2 border border-gray-300\" value={value} />\r\n      </>;\n}\n_c = Textfield;\nvar _c;\n$RefreshReg$(_c, \"Textfield\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c"]
}
